/*
** NOTE: these are the keys used for signing & encryption
**
** In a real scenario, device-unique keys would be securely stored on the device
** in the provisioning process
*/

// from https://github.com/ARMmbed/mbed-os-example-mbed-crypto/blob/master/getting-started/main.cpp
// 1024 bit RSA private key used for signing
static const uint8_t key_data_rsa[] =
{
    0x30, 0x82, 0x02, 0x5e, 0x02, 0x01, 0x00, 0x02, 0x81, 0x81, 0x00, 0xaf,
    0x05, 0x7d, 0x39, 0x6e, 0xe8, 0x4f, 0xb7, 0x5f, 0xdb, 0xb5, 0xc2, 0xb1,
    0x3c, 0x7f, 0xe5, 0xa6, 0x54, 0xaa, 0x8a, 0xa2, 0x47, 0x0b, 0x54, 0x1e,
    0xe1, 0xfe, 0xb0, 0xb1, 0x2d, 0x25, 0xc7, 0x97, 0x11, 0x53, 0x12, 0x49,
    0xe1, 0x12, 0x96, 0x28, 0x04, 0x2d, 0xbb, 0xb6, 0xc1, 0x20, 0xd1, 0x44,
    0x35, 0x24, 0xef, 0x4c, 0x0e, 0x6e, 0x1d, 0x89, 0x56, 0xee, 0xb2, 0x07,
    0x7a, 0xf1, 0x23, 0x49, 0xdd, 0xee, 0xe5, 0x44, 0x83, 0xbc, 0x06, 0xc2,
    0xc6, 0x19, 0x48, 0xcd, 0x02, 0xb2, 0x02, 0xe7, 0x96, 0xae, 0xbd, 0x94,
    0xd3, 0xa7, 0xcb, 0xf8, 0x59, 0xc2, 0xc1, 0x81, 0x9c, 0x32, 0x4c, 0xb8,
    0x2b, 0x9c, 0xd3, 0x4e, 0xde, 0x26, 0x3a, 0x2a, 0xbf, 0xfe, 0x47, 0x33,
    0xf0, 0x77, 0x86, 0x9e, 0x86, 0x60, 0xf7, 0xd6, 0x83, 0x4d, 0xa5, 0x3d,
    0x69, 0x0e, 0xf7, 0x98, 0x5f, 0x6b, 0xc3, 0x02, 0x03, 0x01, 0x00, 0x01,
    0x02, 0x81, 0x81, 0x00, 0x87, 0x4b, 0xf0, 0xff, 0xc2, 0xf2, 0xa7, 0x1d,
    0x14, 0x67, 0x1d, 0xdd, 0x01, 0x71, 0xc9, 0x54, 0xd7, 0xfd, 0xbf, 0x50,
    0x28, 0x1e, 0x4f, 0x6d, 0x99, 0xea, 0x0e, 0x1e, 0xbc, 0xf8, 0x2f, 0xaa,
    0x58, 0xe7, 0xb5, 0x95, 0xff, 0xb2, 0x93, 0xd1, 0xab, 0xe1, 0x7f, 0x11,
    0x0b, 0x37, 0xc4, 0x8c, 0xc0, 0xf3, 0x6c, 0x37, 0xe8, 0x4d, 0x87, 0x66,
    0x21, 0xd3, 0x27, 0xf6, 0x4b, 0xbe, 0x08, 0x45, 0x7d, 0x3e, 0xc4, 0x09,
    0x8b, 0xa2, 0xfa, 0x0a, 0x31, 0x9f, 0xba, 0x41, 0x1c, 0x28, 0x41, 0xed,
    0x7b, 0xe8, 0x31, 0x96, 0xa8, 0xcd, 0xf9, 0xda, 0xa5, 0xd0, 0x06, 0x94,
    0xbc, 0x33, 0x5f, 0xc4, 0xc3, 0x22, 0x17, 0xfe, 0x04, 0x88, 0xbc, 0xe9,
    0xcb, 0x72, 0x02, 0xe5, 0x94, 0x68, 0xb1, 0xea, 0xd1, 0x19, 0x00, 0x04,
    0x77, 0xdb, 0x2c, 0xa7, 0x97, 0xfa, 0xc1, 0x9e, 0xda, 0x3f, 0x58, 0xc1,
    0x02, 0x41, 0x00, 0xe2, 0xab, 0x76, 0x08, 0x41, 0xbb, 0x9d, 0x30, 0xa8,
    0x1d, 0x22, 0x2d, 0xe1, 0xeb, 0x73, 0x81, 0xd8, 0x22, 0x14, 0x40, 0x7f,
    0x1b, 0x97, 0x5c, 0xbb, 0xfe, 0x4e, 0x1a, 0x94, 0x67, 0xfd, 0x98, 0xad,
    0xbd, 0x78, 0xf6, 0x07, 0x83, 0x6c, 0xa5, 0xbe, 0x19, 0x28, 0xb9, 0xd1,
    0x60, 0xd9, 0x7f, 0xd4, 0x5c, 0x12, 0xd6, 0xb5, 0x2e, 0x2c, 0x98, 0x71,
    0xa1, 0x74, 0xc6, 0x6b, 0x48, 0x81, 0x13, 0x02, 0x41, 0x00, 0xc5, 0xab,
    0x27, 0x60, 0x21, 0x59, 0xae, 0x7d, 0x6f, 0x20, 0xc3, 0xc2, 0xee, 0x85,
    0x1e, 0x46, 0xdc, 0x11, 0x2e, 0x68, 0x9e, 0x28, 0xd5, 0xfc, 0xbb, 0xf9,
    0x90, 0xa9, 0x9e, 0xf8, 0xa9, 0x0b, 0x8b, 0xb4, 0x4f, 0xd3, 0x64, 0x67,
    0xe7, 0xfc, 0x17, 0x89, 0xce, 0xb6, 0x63, 0xab, 0xda, 0x33, 0x86, 0x52,
    0xc3, 0xc7, 0x3f, 0x11, 0x17, 0x74, 0x90, 0x2e, 0x84, 0x05, 0x65, 0x92,
    0x70, 0x91, 0x02, 0x41, 0x00, 0xb6, 0xcd, 0xbd, 0x35, 0x4f, 0x7d, 0xf5,
    0x79, 0xa6, 0x3b, 0x48, 0xb3, 0x64, 0x3e, 0x35, 0x3b, 0x84, 0x89, 0x87,
    0x77, 0xb4, 0x8b, 0x15, 0xf9, 0x4e, 0x0b, 0xfc, 0x05, 0x67, 0xa6, 0xae,
    0x59, 0x11, 0xd5, 0x7a, 0xd6, 0x40, 0x9c, 0xf7, 0x64, 0x7b, 0xf9, 0x62,
    0x64, 0xe9, 0xbd, 0x87, 0xeb, 0x95, 0xe2, 0x63, 0xb7, 0x11, 0x0b, 0x9a,
    0x1f, 0x9f, 0x94, 0xac, 0xce, 0xd0, 0xfa, 0xfa, 0x4d, 0x02, 0x40, 0x71,
    0x19, 0x5e, 0xec, 0x37, 0xe8, 0xd2, 0x57, 0xde, 0xcf, 0xc6, 0x72, 0xb0,
    0x7a, 0xe6, 0x39, 0xf1, 0x0c, 0xbb, 0x9b, 0x0c, 0x73, 0x9d, 0x0c, 0x80,
    0x99, 0x68, 0xd6, 0x44, 0xa9, 0x4e, 0x3f, 0xd6, 0xed, 0x92, 0x87, 0x07,
    0x7a, 0x14, 0x58, 0x3f, 0x37, 0x90, 0x58, 0xf7, 0x6a, 0x8a, 0xec, 0xd4,
    0x3c, 0x62, 0xdc, 0x8c, 0x0f, 0x41, 0x76, 0x66, 0x50, 0xd7, 0x25, 0x27,
    0x5a, 0xc4, 0xa1, 0x02, 0x41, 0x00, 0xbb, 0x32, 0xd1, 0x33, 0xed, 0xc2,
    0xe0, 0x48, 0xd4, 0x63, 0x38, 0x8b, 0x7b, 0xe9, 0xcb, 0x4b, 0xe2, 0x9f,
    0x4b, 0x62, 0x50, 0xbe, 0x60, 0x3e, 0x70, 0xe3, 0x64, 0x75, 0x01, 0xc9,
    0x7d, 0xdd, 0xe2, 0x0a, 0x4e, 0x71, 0xbe, 0x95, 0xfd, 0x5e, 0x71, 0x78,
    0x4e, 0x25, 0xac, 0xa4, 0xba, 0xf2, 0x5b, 0xe5, 0x73, 0x8a, 0xae, 0x59,
    0xbb, 0xfe, 0x1c, 0x99, 0x77, 0x81, 0x44, 0x7a, 0x2b, 0x24,
};

/* public key of above key, used for verifying, stored on the server */
// static const uint8_t key_data_rsa_verify[PSA_EXPORT_PUBLIC_KEY_OUTPUT_SIZE(PSA_KEY_TYPE_RSA_KEY_PAIR, 1024)];

/* rsa private key that is on the server, used for decryption */
static const uint8_t key_data_rsa_crypt[] =
{
    0x30,0x82,0x2,0x77,0x2,0x1,0x0,0x30,0xd,0x6,0x9,0x2a,0x86,0x48,0x86,0xf7,0xd,0x1,0x1,0x1,0x5,0x0,0x4,
    0x82,0x2, 0x61,0x30,0x82,0x2,0x5d,0x2,0x1,0x0,0x2,0x81,0x81,0x0,0xe2,0xc7,0xa6,0x6,0x7e,0x8d,0x50,0x77,
    0xbd,0x97,0x78,0xfe,0x81,0x72,0x92,0xbe,0x1,0x6e,0x4c,0x37,0xf2,0x55,0xdd,0xf0,0x7d,0x76,0xa2,0xdd,0x6f,
    0x79,0xce,0xb5,0x2a,0x29,0xb9,0x1e,0x1,0xa7,0x97,0xfe,0x56,0x7a,0xc2,0x68,0xba,0xb0,0x47,0x7d,0x94,0xaa,
    0xbe,0xbf,0xbb,0xc2,0xe5,0xfd,0x5,0x21,0xf4,0x8f,0x9c,0x1b,0x63,0xff,0xb7,0x53,0xa8,0xbf,0x93,0x9b,0x4b,
    0x6b,0xad,0x85,0xb4,0x7f,0xe4,0x18,0x5c,0xac,0xea,0x2e,0x12,0x2f,0x72,0x4b,0x52,0x1c,0x90,0x70,0x4c,0xea,
    0x89,0xea,0xaa,0x8a,0x82,0xff,0xd2,0x65,0x7e,0x1a,0x5f,0xa3,0x2c,0xaf,0xdd,0xa7,0xe,0x22,0x8e,0x8,0x63,
    0xe0,0x59,0xe4,0x5f,0x39,0x96,0xb2,0xc6,0x4a,0xd,0x74,0x1a,0xa3,0x52,0x95,0x2,0x3,0x1,0x0,0x1,0x2,0x81,
    0x80,0x25,0xaf,0xbd,0xf4,0x78,0x55,0x6d,0x98,0xe8,0x85,0xe2,0x92,0x90,0xda,0x84,0x6e,0x54,0xf8,0x8a,0x6c,
    0x5,0xb6,0xa5,0x52,0x50,0xd7,0x45,0x4b,0x7d,0x3a,0x5,0xd2,0xef,0x75,0xcd,0x90,0xa1,0xff,0xc2,0xef,0x7e,
    0x59,0x9a,0x33,0x23,0x4b,0x26,0x26,0x45,0x6d,0x76,0x93,0x90,0x55,0x5c,0x39,0x7,0x0,0x54,0x8f,0x5,0x7,
    0x3c,0x3f,0xb3,0x90,0x40,0x50,0x6e,0xfd,0x21,0xcd,0xac,0xe0,0x44,0x6,0xdf,0xc1,0x24,0x1b,0x45,0xb8,0x3,
    0x39,0xa8,0xdb,0x4,0x9a,0x34,0x90,0xb7,0xce,0x34,0xcb,0x47,0xd9,0xd9,0x16,0xd0,0xc6,0x5f,0xee,0x91,0xc5,
    0x86,0x0,0xfe,0xaf,0x73,0x4d,0x83,0x13,0x92,0xa5,0x63,0x16,0x14,0x49,0xf7,0xd9,0x97,0xe6,0xed,0xd1,0x4c,
    0x9f,0xa2,0xa1,0x2,0x41,0x0,0xf7,0x5c,0xd6,0x94,0xce,0x4f,0xa9,0xab,0x77,0xbb,0x87,0x77,0xe3,0xa5,0xc3,
    0x27,0x7d,0xba,0xcd,0x4b,0x85,0x22,0x69,0xb2,0xfb,0xdd,0xfb,0xa2,0xf0,0x3b,0x68,0x7a,0x51,0xbd,0x6a,0x86,
    0xf8,0x5b,0x66,0xf0,0x88,0xde,0xef,0x1d,0xbc,0xca,0xd8,0xb6,0x25,0x8c,0x49,0x67,0x83,0xf6,0x9b,0x95,0xcf,
    0x71,0xf5,0x6b,0x29,0x4,0xa1,0xa9,0x2,0x41,0x0,0xea,0xb2,0xd2,0x6e,0xdc,0x3,0x19,0x29,0xfe,0x39,0x4a,0x14,
    0xb9,0x33,0xa1,0x9e,0xf4,0x72,0x7e,0xa6,0xc3,0x47,0xc2,0x90,0x26,0x30,0xda,0xb8,0xf,0x8d,0xd1,0x5f,0xc8,
    0xb0,0xd0,0xa1,0x21,0xf1,0x3b,0xc7,0xde,0xeb,0xb0,0x42,0x6c,0xcc,0x4f,0x96,0x3a,0x73,0x6d,0x5e,0xfe,0xd9,
    0x1b,0xb3,0xc8,0x44,0x64,0x18,0x6,0x2a,0x55,0xd,0x2,0x41,0x0,0x8a,0xee,0x88,0xd3,0x11,0x41,0x6b,0x11,0x94,
    0x71,0x2e,0x78,0x26,0xd3,0x2e,0x56,0x1a,0xe6,0xf5,0x71,0x6a,0x38,0x56,0xd7,0xa1,0x61,0x1f,0x79,0x77,0xa6,
    0x56,0x5b,0x5,0x57,0xf6,0xe2,0x11,0xd1,0xfc,0x72,0x32,0xdd,0xcb,0xbd,0x8f,0x10,0xfb,0x40,0xea,0xbb,0xed,
    0x6a,0x87,0x92,0xd5,0xf6,0x1,0x8a,0x87,0x6,0x6,0x6,0xc4,0xe9,0x2,0x40,0x28,0x4d,0x68,0xe1,0x6c,0x9a,0x83,
    0x99,0xb8,0x74,0x32,0xa,0x78,0xfb,0x2a,0xc7,0xd7,0x6,0x4a,0x45,0x6c,0xc7,0x47,0xdb,0xe5,0x13,0x2,0x9c,0x14,
    0xdf,0xaf,0x92,0x99,0x2d,0xf3,0xc5,0x97,0xc4,0x8b,0x15,0x79,0x6c,0x53,0xaa,0x34,0x70,0xa9,0x42,0xc,0xeb,0x81,
    0x5e,0x8c,0xb8,0xcf,0x8f,0x1,0xd6,0xec,0xb1,0x4b,0x6d,0xbd,0x89,0x2,0x41,0x0,0xf0,0x32,0x81,0x25,0x8b,0xdc,
    0xc3,0xb0,0xaa,0xc1,0x93,0x17,0x95,0x35,0xfa,0xf7,0x73,0x8e,0x83,0x67,0x44,0x2d,0x1f,0xc7,0x93,0xcf,0x54,
    0xd6,0x98,0x4c,0x77,0x9e,0x63,0x2e,0x2a,0xd5,0x86,0x2f,0xe7,0xdf,0x36,0xe0,0x9c,0x89,0xad,0x95,0xce,0x87,
    0xf1,0xb0,0x69,0x8d,0x5c,0xd8,0x58,0xc6,0x4d,0xb4,0x3,0xb8,0x7e,0xec,0x34,0x1
};

/* this will be filled with the public key of above rsa private key, used for encryption on the device */
static uint8_t rsa_pub_key_buf[PSA_EXPORT_PUBLIC_KEY_OUTPUT_SIZE(PSA_KEY_TYPE_RSA_KEY_PAIR, 1024)];

/* not currently used */
static const uint8_t key_data_aes[] =
{
    0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
    0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa,
};

/* 32 byte ECDSA secp256r1 key
 * PSA_KEY_TYPE_ECC_KEY_PAIR(PSA_ECC_FAMILY_SECP_R1);
 * PSA_ALG_ECDSA(PSA_ALG_SHA_256)
 */
static uint8_t priv_key_data[32] =
{
    0x14, 0xbc, 0xb9, 0x53, 0xa4, 0xee, 0xed, 0x50,
    0x09, 0x36, 0x92, 0x07, 0x1d, 0xdb, 0x24, 0x2c,
    0xef, 0xf9, 0x57, 0x92, 0x40, 0x4f, 0x49, 0xaa,
    0xd0, 0x7c, 0x5b, 0x3f, 0x26, 0xa7, 0x80, 0x48
};
